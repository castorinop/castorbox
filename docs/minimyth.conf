################################################################################
# minimyth.conf
#
# The required MiniMyth main configuration file.
#
# This file contains configuration variables recognized by MiniMyth.
################################################################################

################################################################################
# MiniMyth
#
# MiniMyth is a Linux distribution for turning select diskless computers into 
# MythTV frontends. MiniMyth consists of the MiniMyth kernel
# (<version>/kernel), the MiniMyth root file system image (<version>/rootfs)
# the MiniMyth themes directory (<version>/themes/) and a set of MiniMyth
# configuration files.
#
# ==============================================================================
# MiniMyth Installation
#
# MiniMyth can be installed by network booting the motherboard using PXE boot
# or by local booting the motherboard using an IDE or USB device.
#
#-------------------------------------------------------------------------------
# Network based MiniMyth Installation using PXELinux and SQUASHFS
#
# PXELinux <http://syslinux.zytor.com/pxe.php> can be used to boot MiniMyth
# off a network server. For instructions on how to do this, see
# <http://www.viaarena.com/Default.aspx?PageID=5&ArticleID=52>. Your
# PXELinux configuration file (pxelinux.cfg/default) should contain something
# similar to the following (where <version> is the MiniMyth version (e.g.
# minimyth-0.19-16), kernel is the MiniMyth kernel file and rootfs is the
# name of the MiniMyth root file system image):
#
# DEFAULT minimyth
#
# LABEL minimyth
#	KERNEL <version>/kernel
#	APPEND ro root=/dev/ram0 initrd=<version>/rootfs ramdisk=64000
#
#-------------------------------------------------------------------------------
# Network based MiniMyth Installation using PXELinux and NFS
#
# If you choose, rather than using the MiniMyth root file system image, you can
# NFS mount the MiniMyth root file system. You will want to download the
# MiniMyth root files system tarball and extract them into the directory that
# you will export using NFS. Booting is the same as when using PXELinux with the
# MiniMyth root file system image, but your PXELinux configuration file
# (pxelinux.cfg/default) should contain something similar to the following
# (where <version> is the MiniMyth version (e.g. minimyth-0.19-16), kernel is
# the MiniMyth kernel file, <nfs-server> is the IPv4 address of the NFS server
# and <nfs-rootfs> is the MiniMyth root file system shared by the NFS server):
#
# DEFAULT minimyth
#
# LABEL minimyth
#	KERNEL <version>/kernel
#	APPEND ro root=/dev/nfs nfsroot=<nfs-server>:/<nfs-rootfs> ip=dhcp
#
#-------------------------------------------------------------------------------
# IDE flash device based MiniMyth Installation using SYSLinux and SQUASHFS
#
# SYSLinux <http://syslinux.zytor.com/faq.php> can be used to boot MiniMyth
# off a IDE flash device.
#
# The easiest way to do this is to install a CF-to-IDE adapter in your
# MiniMyth frontend and make a Compact Flash card MiniMyth bootable using the
#'mm_local_install' script included with the MiniMyth distribution. Insert the
# Compact Flash card into a USB based Compact Flash reader in a Linux computer
# and run 'mm_local_install' <distro_path>, where <distro_path> is the directory
# containing the MiniMyth kernel file, the MiniMyth root file system image,
# (optionally) the MiniMyth extras file system image and the MiniMyth
# configuration directory.
#
# In addition, you can manually partition the IDE disk, format the partition for
# MiniMyth as FAT (msdos or vfat) with the label 'minimyth', install the book
# loader (e.g. SYSLinux), mount the partition and copy over the MiniMyth kernel
# file, the MiniMyth root file system image, (optionally) the MiniMyth extras
# file system image and the MiniMyth configuration directory. This works because 
# MiniMyth mounts any partition labeled 'minimyth' at the mount point
# '/minimyth', and MiniMyth assumes and directory named '/minimyth' contains the
# MiniMyth distribution and the MiniMyth configuration directory.
#
# If you use SYSLinux as the boot loader, then your SYSLinux configuration file
# (/syslinux.cfg) should contain somthing similar to the following (where
# kernel is the name of the MiniMyth kernel file and rootfs is the name of
# the MiniMyth root file system image):
#
#
# DEFAULT minimyth
#
# LABEL minimyth
#	KERNEL kernel
#	APPEND ro root=/dev/ram0 initrd=rootfs ramdisk_blocksize=4096 ramdisk=64000
#
#-------------------------------------------------------------------------------
# USB flash device based MiniMyth Installation using SYSLinux and SQUASHFS
#
# It has been observed that booting VIA EPIA M and VIA EPIA MII motherboards
# from a USB flash device is too slow to be useful. Since the ASUS A8N-VM CSM
# motherboard does not have this problem, it is likely that this is a problem
# with the VIA EPIA motherboards.
#
# SYSLinux <http://syslinux.zytor.com/faq.php> can be used to boot MiniMyth
# off a USB flash device.
#
# The easiest way to do this is make a USB flash device MiniMyth bootable using
# the 'mm_local_install' script included with the MiniMyth distribution. Insert
# the USB flash device into a Linux computer and run
# 'mm_local_install <distro_path>, where <distro_path> is the directory
# containing the MiniMyth kernel file, the MiniMyth root file system image,
# (optionally) the MiniMyth extras file system image and the MiniMyth
# configuration directory.
#
# In addition, you can manually partition the USB flash device, format the
# partition for MiniMyth as FAT (msdos or vfat) with the label 'minimyth',
# install the book loader (e.g. SYSLinux), mount the partition and copy over the
# MiniMyth kernel file, the MiniMyth root file system image, (optionally) the
# MiniMyth extras file system image and the MiniMyth configuration directory.
# This works because MiniMyth mounts any partition labeled 'minimyth' at the
# mount point '/minimyth', and MiniMyth assumes and directory named '/minimyth'
# contains the MiniMyth distribution and the MiniMyth configuration directory.
#
# If you use SYSLinux as the boot loader, then your SYSLinux configuration file
# (/syslinux.cfg) should contain somthing similar to the following (where
# kernel is the name of the MiniMyth kernel file and rootfs is the name of
# the MiniMyth root file system image):
#
# DEFAULT minimyth
#
# LABEL minimyth
#	KERNEL kernel
#	APPEND ro root=/dev/ram0 initrd=rootfs ramdisk_blocksize=4096 ramdisk=64000
#
# ==============================================================================
# MiniMyth Configuration
# 
# MiniMyth can be configured at boot time on a per MiniMyth frontend basis.
#
#-------------------------------------------------------------------------------
# Boot Line Configuration
#
# You can affect MiniMyth with boot line (the APPEND line for PXELinux and
# SYSLinux) configuration. The following configuration variables are of some
# interest:
#
# debug
#   Enables kernel debug logging and disabled the boot splash screen.
# irqpoll
#   Works around IRQ problems with the ASUS A8N-VM CSM motherboard that can 
#   cause a a kernel oops when the nvidia kernel driver is loaded, resulting
#   in X not starting correctly.
# MM_DEBUG
#   Enables MiniMyth debug logging.
#   Valid values are 'yes'.
# MM_DHCP_HOSTNAME
#   The MiniMyth frontend's hostname. This value will override any value
#   provided by the DHCP serer and any value provided on the boot line.
#   If your DHCP server does not provide a hostname and you want the hostname
#   to be available before minimyth.conf is loaded, then you can set it using
#   MM_DHCP_HOSTNAME.
#
#-------------------------------------------------------------------------------
# DHCP Server Configuration
#
# Normally, MiniMyth obtains the MiniMyth frontend's hostname from the DHCP
# server. If the DHCP server does not provide MiniMyth frontend's hostname then
# you must provide it by setting MM_DHCP_HOSTNAME on the boot line or by setting
# MM_HOSTNAME in the 'minimyth.conf' file. Otherwise, during initialization
# MiniMyth will output an error message and abort. If you are using the ISC DHCP
# server, then the dhcpd.conf file parameter for sending the client's hostname
# is 'use-host-decl-names'.
# 
# Normally, MiniMyth obtains the DNS server address(es) from the DHCP server.
# If the DHCP server does not provide the DNS name server address(es), then
# you must provide them by setting MM_DNS_SERVERS in the 'minimyth.conf' file.
# Otherwise, during initialization MiniMyth will output an error message and
# abort. If you are using the ISC DHCP server then the dhcpd.conf file option
# for setting the DNS name server address(es) is 'domain-name-servers'.
#
# Normally, MiniMyth obtains the NTP time server address(es) from the DHCP
# server. If the DHCP server does not provide the NTP time server address(es),
# then you must provide them by setting MM_NTP_SERVERS in the 'minimyth.conf'
# file. Otherwise, during initialization MiniMyth will output an error message
# and abort. If you are using the ISC DHCP server then the dhcpd.conf file
# option for setting the NTP time server address(es) is 'ntp-servers'.
#
# If you want to use a remote log (syslog) server, MiniMyth can optain the 
# log server address(es) from the DHCP server. Alternatively, you can provide
# them by setting MM_LOG_SERVERS in the 'minimyth.conf' file. If the DHCP server
# provides the log server address(es), then MiniMyth will log to the remote log
# server. If the DHCP server does not provide the log server address(es), then
# MiniMyth will log to a local log file. If you are using the ISC DHCP server
# then the dhcp.conf file option for setting the log server address(es) is
# 'log-servers'.
#
#-------------------------------------------------------------------------------
# MiniMyth Configuration File Locations
# 
# MiniMyth looks for the MiniMyth configuration directory ('conf') in the
# MiniMyth boot directory. MiniMyth 'guesses' the location of the boot directory
# as follows. If the file system contains the directory '/minimyth', then
# MiniMyth assumes that '/minimyth' is the boot directory. Otherwise, MiniMyth
# assumes the boot directory is the directory that contains the boot loader on
# the TFTP server.
#
# In practice, this means that if you network boot MiniMyth then you put the
# MiniMyth configuration directory in the same directory on the TFTP server as
# the network boot loader (called 'pxelinux.0' when using PXELinux), and that
# if you local boot MiniMyth then you put the MiniMyth configuration directory
# at the root of the partition labeled 'minimyth' (which MiniMyth will
# automatically mount at the mount point '/minimyth'.
#
# Once MiniMyth has 'guessed' the boot directory (lets call it '<boot>'), then
# MiniMyth looks for configuration files first in the directory
# '<boot>/conf/<hostname>' and second in the directory '<dir>/conf/default',
# where <hostname> is the hostname of the MiniMyth frontend.
# 
#-------------------------------------------------------------------------------
# MiniMyth Configuration Files
# 
# The main configuration file is 'minimyth.conf'. You must provide a
# 'minimyth.conf' file.
# 
# The main configuration script is 'minimyth.script'. This is a shell script
# that will be executed by MiniMyth after it has retrieved and processed the
# 'minimyth.conf' file and configured name (DNS) and logging (syslog) services.
# You can use it to do things such as install additional kernel modules,
#
# In addition to the main configuration file, the main configuration script,
# and the DHCP configure file, you can override the
# following MiniMyth configuration files:
#     file           | description
#    -----------------------------------------------------------------
#     LCDd.conf  | /etc/LCDd.conf
#     lircd.conf | /etc/lircd.conf
#     lircrc     | The lircrc file used by mythtv, mplayer and xine
#     xinitrc    | /etc/X11/xinit/xinitrc
#     xorg.conf  | /etc/X11/xorg.conf
#
# If you want to use a remote control and your remote control is not one of the
# built in remote controls, then you will need to provide the appropriate
# 'lircd.conf' and 'lircrc' files.
#
# If you cannot configure X to your liking using the X configuration variables
# in the 'minimyth.conf' file, then you can provide different xinitrc and/or
# xorg.conf files.
################################################################################

################################################################################
# MiniMyth update variables.
#
# If you are using local boot, then you can use the command 'mm_update' to
# update your MiniMyth kernel file, your MiniMyth root file system image, and
# (optionally) your MiniMyth extras file system image.
#
# The variables are:
#   MM_UPDATE_URL
#     The URL that points to the location of the latest MiniMyth files.
#     The default value is 'http://linpvr.org/minimyth/download/stable/latest/'.
#
# The URL must have the following form:
#     <protocol>://<server>/<path>
# The valid protocol values are: 'http', 'tftp' and 'file'.
################################################################################

################################################################################
# DHCP overrides variables.
#
# If your DHCP server does not provide certain parameters (or provides incorrect
# values for certain parameters), you can use these variables to override the
# parameter values provided by the DHCP server. In addition to overriding any
# values provided by the DHCP server, these variables will override any values
# provided on the boot line.
#
# MM_HOSTNAME
#   The MiniMyth frontend's hostname.
# MM_DOMAIN
#   The MiniMyth frontend's domain.
# MM_DNS_SERVERS
#   A list of DNS servers that the MiniMyth frontend will use to resolve DNS
#   names.
# MM_NTP_SERVERS
#   A list of NTP servers that the MiniMyth frontend will use to synchronize
#   its clock.
# MM_LOG_SERVERS
#   A list of log (syslog) servers to which MiniMyth will log. MiniMyth will
#   log to the first log server in the list.
################################################################################

################################################################################
# Time zone.
# 
# MM_TZ
#    The time zone. You must provide a time zone. Without the correct time zone,
#    functions such as fast forward, rewind and commercial skip will not work.
#    On Linux, you can use the command 'tzselect' to determine the correct time
#    zone.
################################################################################
#MM_TZ='America/Los_Angeles'

################################################################################
# Hardware configuration variables.
#
# MM_HARDWARE_MOTHERBOARD:
#     The motherboard.
#     If Intel support is included in the binaries, then valid values include:
#        COMMELL_LV_675 - untested and known to be incomplete
#     If NVIDIA support is included in the binaries, then valid values include:
#        ASUS_A8N_VM_CSM
#        BIOSTAR_M7NCD - untested
#     If VIA support is included in the binaries, then valid values include:
#        COMMELL_LV_667
#        VIA_EPIA_CN - untested
#        VIA_EPIA_EN - untested
#        VIA_EPIA_M
#        VIA_EPIA_MII
#        VIA_EPIA_ML
#        VIA_EPIA_MS
#        VIA_EPIA_N - untested
#        VIA_EPIA_PD
#        VIA_EPIA_SP
#        VIA_EPIA_TC
################################################################################
#MM_HARDWARE_MOTHERBOARD='VIA_EPIA_M'

################################################################################
# CPU frequency scaling variables
#
# MM_CPUFREQ_GOVERNOR:
#     Set the CPU frequency scaling governor. Valid values are 'performance',
#     'powersave', 'ondemand', 'conservative' and 'userspace', with
#     'performance' being the default. If 'userspace' is selected, then the
#     'powernowd' daemon is run to control the CPU speed.
#     At this time, this is supported for the AMD Athlon64 only. VIA support
#     in the kernel (the longhaul driver) has been disabled by the kernel
#     maintainers until stability problems are addressed.
################################################################################
#MM_CPUFREQ_GOVERNOR='performance'

################################################################################
# Audio configuration variables
#
# MM_AUDIO_TYPE
#     Set audio type. Valid values are 'analog', 'digital' and 'digital+analog'
#     with 'analog' being the default.
################################################################################
#MM_AUDIO_TYPE='analog'

################################################################################
# Video configurion variables
#
# MM_VIDEO_ASPECT_RATIO
#     Set video aspect ratio. Valid values are '4:3' and '16:9'
#     with '4:3' being default.
# MM_VIDEO_DEINTERLACE_ENABLED
#     Specify whether or not to enable bob deinterlacing.
#     Valid values are 'yes' and 'no' with 'no' being the default.
################################################################################
#MM_VIDEO_ASPECT_RATIO='4:3'
#MM_VIDEO_DEINTERLACE_ENABLED='no'

################################################################################
# X configuration variables
#
# MM_X_ENABLED
#     Specify whether or not to enable X windows.
#     Valid values are 'yes' and 'no' with 'yes' being the default.
# MM_X_WM_ENABLED
#     Specify whether or not to enable the X window manager.
#     Valid values are 'yes' and 'no' with 'no' being the default.
# MM_X_VNC_ENABLED
#     Specify whether or not to enable X VNC server.
#     Valid values are 'yes' and 'no' with 'yes' being the default.
# MM_X_SCREENSAVER_ENABLED
#     Specify whether or not to enable X XScreenSaver.
#     Valid values are 'yes' and 'no' with 'no' being the default.
# MM_X_DVI_ENABLED
#     Specify whether or not to enable the DVI output.
#     Valid values are 'yes' and 'no' with 'no' being the default.
# MM_X_VGA_ENABLED
#     Specify whether or not to enable the VGA output.
#     Valid values are 'yes' and 'no' with 'no' being the default.
# MM_X_TV_ENABLED
#     Specify whether or not to enable the TV output.
#     Valid values are 'yes' and 'no' with 'yes' being the default.
# MM_X_TV_TYPE
#     Specify the type of television (if any) being used.
#     Valid values are 'NTSC' and 'PAL' with 'NTSC' being the default.
# MM_X_TV_OUTPUT
#     Specify the television output (if any) being used.
#     Valid values 'Composite', 'S-Video', 'SC' (untested), 'RGB' (untested)
#     'YCbCr' (untested) with 'Composite' being the default.
# MM_X_REFRESH
#     Specify the screen vertical refresh rate.
#     The default depends on MM_X_TV_TYPE as follows:
#         '60' for MM_X_TV_TYPE=NTSC.
#         '50' for MM_X_TV_TYPE=PAL.
# MM_X_MODE
#     Specify a built in or user specified (MM_X_MODELINE) screen mode.
#     The default depends on MM_X_VGA_ENABLED, MM_X_TV_ENABLED and MM_X_TV_TYPE
#     as follows:
#         '720x480Noscale' for MM_X_VGA_ENABLED=no and MM_X_TV_ENABLED=yes
#                          and MM_X_TV_TYPE=NTSC.
#         '720x576Noscale' for MM_X_VGA_ENABLED=no and MM_X_TV_ENABLED=yes
#                          and MM_X_TV_TYPE=PAL.
#         '800x600'        otherwise
#     Other popular modes are:
#         '720x480', '720x480Over', '720x576' and '720x576Over'.
#     If MM_X_RESOLUTION_X and MM_X_RESOLUTION_Y are non-empty, then MM_X_MODE
#     is ignored.
# MM_X_MODELINE
#     Specify a line for a screen mode.
#     For example,
#         MM_X_MODELINE='Modeline "1280x720_60.00"  74.48  1280 1336 1472 1664  720 721 724 746  -HSync +Vsync'
#     The default value for MM_X_MODELINE is ''.
#     If MM_X_RESOLUTION_X and MM_X_RESOLUTION_Y are non-empty, then
#     MM_X_MODELINE is ignored.
# MM_X_RESOLUTION_X
#     Specify the horizontal screen resolution (in pixels).
#     The default value for MM_X_RESOLUTION_X is ''.
#     If MM_X_RESOLUTION_X is specified, then MM_X_RESOLUTION_Y must be
#     specified.
# MM_X_RESOLUTION_Y
#     Specify the vertical screen resolution (in pixels).
#     The default value for MM_X_RESOLUTION_Y is ''.
#     If MM_X_RESOLUTION_Y is specified, then MM_X_RESOLUTION_X must be
#     specified.
# MM_X_DISPLAYSIZE_X
#     Specify the horizontal display size (in millimeters).
#     The default value for MM_X_DISPLAYSIZE_X is ''.
#     If MM_X_DISPLAYSIZE_X is specified, then MM_X_DISPLAYSIZE_Y must be
#     specified.
# MM_X_DISPLAYSIZE_Y
#     Specify the vertical display size (in millimeters).
#     The default value for MM_X_DISPLAYSIZE_Y is ''.
#     If MM_X_DISPLAYSIZE_Y is specified, then MM_X_DISPLAYSIZE_X must be
#     specified.
################################################################################
#MM_X_ENABLED='yes'
#MM_X_WM_ENABLED='no'
#MM_X_VNC_ENABLED='yes'
#MM_X_SCREENSAVER_ENABLED='no'
#MM_X_DVI_ENABLED='no'
#MM_X_VGA_ENABLED='no'
#MM_X_TV_ENABLED='yes'
#MM_X_TV_TYPE='NTSC'
#MM_X_TV_OUTPUT='Composite'
#MM_X_REFRESH='60'
#MM_X_MODE='720x480Noscale'
#MM_X_MODELINE=
#MM_X_RESOLUTION_X=
#MM_X_RESOLUTION_Y=
#MM_X_DISPLAYSIZE_X=
#MM_X_DISPLAYSIZE_Y=

################################################################################
# Myth master backend database configuration variables.
#
# MM_MYTH_SERVER:
#     The DNS name or IP address of the Myth database (mysql.txt:DBHostName).
#     If not specified, it defaults to the TFTP server address.
# MM_MYTH_DBUSERNAME:
#     The Myth database username (mysql.txt:DBUserName).
#     If not specified, it defaults to 'mythtv'.
# MM_MYTH_DBPASSWORD:
#     The Myth database password (mysql.txt:DBPassword).
#     If not specified, it defaults to 'mythtv'.
# MM_MYTH_DBNAME:
#     The Myth database name (mysql.txt:DBName).
#     If not specified, it defaults to 'mythconverg'.
# MM_MYTH_WOL_ENABLED:
#     Specifies whether or not to enable wake-on-lan.
#     Valid values are 'yes' and 'no' with 'no' being the default.
# MM_MYTH_WOL_MAC:
#     Specifies the MAC address of the Myth master backend database.
#     The default is '00:00:00:00:00:00'.
# MM_MYTH_WOLSQLRECONNECTWAITTIME:
#     The Myth database WOL reconnect wait time (WOLSqlReconnectWaitTime).
#     The default is '15'.
# MM_MYTH_WOLSQLCONNECTRETRY:
#     The Myth database WOL connection retries (WOLSqlConnectionRetry).
#     The default is '20'
# MM_MYTH_WOLSQLCOMMAND:
#     The default is 'wakelan -b <broadcast> -m <mac>',
#         where <broadcast> is the subnet broadcast address,
#         and <mac> is MM_MYTH_WOL_MAC.
################################################################################
#MM_MYTH_SERVER=
#MM_MYTH_DBUSERNAME='mythtv'
#MM_MYTH_DBPASSWORD='mythtv'
#MM_MYTH_DBNAME='mythconverg'
#MM_MYTH_WOL_ENABLED='no'
#MM_MYTH_WOL_MAC='00:00:00:00:00:00'
#MM_MYTH_WOLSQLRECONNECTWAITTIME='15'
#MM_MYTH_WOLSQLCONNECTRETRY='20'
#MM_MYTH_WOLSQLCOMMAND='wakelan -b @MM_MYTH_WOL_BROADCAST@ -m @MM_MYTH_WOL_MAC@'

################################################################################
# Myth plugin configuration variables.
#
# MM_MYTHTV_OPTICAL_DISK_ENABLED:
#   Specify whether or not to enable MythTV support for optical disks.
#   Valid values are 'yes' and 'no' with 'yes' being the default.
# MM_MYTHDVD_ENABLED:
#   Specify whether or not to enable MythDVD.
#   Valid values are 'yes' and 'no' with 'yes' being the default.
# MM_MYTHGALLERY_ENABLED:
#   Specify whether or not to enable MythGallery.
#   Valid values are 'yes' and 'no' with 'yes' being the default.
# MM_MYTHMUSIC_ENABLED:
#   Specify whether or not to enable MythMusic.
#   Valid values are 'yes' and 'no' with 'yes' being the default.
# MM_MYTHNEWS_ENABLED:
#   Specify whether or not to enable MythNews.
#   Valid values are 'yes' and 'no' with 'yes' being the default.
# MM_MYTHSTREAM_ENABLED:
#   Specify whether or not to enable MythStream.
#   Valid values are 'yes' and 'no' with 'yes' being the default.
# MM_MYTHVIDEO_ENABLED:
#   Specify whether or not to enable MythVideo.
#   Valid values are 'yes' and 'no' with 'yes' being the default.
# MM_MYTHWEATHER_ENABLED:
#   Specify whether or not to enable MythWeather.
#   Valid values are 'yes' and 'no' with 'yes' being the default.
################################################################################
#MM_MYTHTV_OPTICAL_DISK_ENABLED='no'
#MM_MYTHDVD_ENABLED='no'
#MM_MYTHGALLERY_ENABLED='no'
#MM_MYTHMUSIC_ENABLED='no'
#MM_MYTHNEWS_ENABLED='no'
#MM_MYTHSTREAM_ENABLED='no'
#MM_MYTHVIDEO_ENABLED='no'
#MM_MYTHWEATHER_ENABLED='no'

################################################################################
# Extras directory configuration variables.
#
# You can extend MiniMyth by adding adding files under /usr/local. 
#     MM_EXTRAS_URL:
#         The URL that points to the location of the extras directory.
#         This will be mounted at /usr/local.
#         MiniMyth contains a script 'mm_squashfs_extras_make' to help with
#         creating an extras squashfs image (*.sfs). Once you have all the
#         files you want in the extras directory on your MiniMyth frontend.
#         Telnet into your MiniMyth frontend and run the script by typing
#         'mm_squashfs_extras_make'. The script will create the extras squashfs
#         image, put the image in the root directory (/) and tell you the name
#         of the image. You can then download the image from your MiniMyth
#         frontend through the web interface to the MiniMyth file system
#         (<http://<frontend>:8080/>.
#
# The URL must have the following form:
#     <protocol>://<username>:<password>@<server>/<path>?<options>
# where <options> are additional mount options (-o).
# For example:
#     nfs://server.home/home/public/music
#     cifs://user:pass@server.home/music?domain=home
#     conf:themecaches/G.A.N.T..1024.768.cmg
# The valid protocol values are: 'nfs', 'cifs', 'http', 'tftp', 'conf',
# 'dist', 'hunt' and 'file'. For 'nfs' and 'cifs' the URL points to a
# remote directory. For 'http', 'tftp', 'conf', 'dist' and 'hunt', the
# URL points to a remote file. For 'file', the URL point to a local
# directory or file. A directory will be mounted at the mount point.
# A file, which can be a squashfs image (*.sfs.), cramfs image (*.cmg)
# or a tarball file (*.tar.bz2) will be retrieved and mounted at (for
# *.sfs and *.cmg files) or retrieved at expanded into (for *.tar.bz2
# files) the mount point. The 'conf', 'dist' and 'hunt' are special
# MiniMyth specific URLs. A 'dist' URL causes MiniMyth to look for the
# file in the MiniMyth distribution directory (the directory with the
# MiniMyth root file system squashfs image). A 'conf' URL causes MiniMyth
# to look for the MiniMyth configuration directory. A 'hunt' URL causes
# MiniMyth to look first in the MiniMyth distributiion directory and
# second in the MiniMyth configuration directory.
#
# Alternatively, you can mount the extras directory by adding the appropriate
# commands to the 'minimyth.script' script.
################################################################################
#MM_EXTRAS_URL='hunt:extras.sfs'

################################################################################
# Codecs directory configuration variables.
#
# You can mount a binary codecs directory for MPlayer and Xine under
# /usr/lib/codecs.
#     MM_CODECS_URL:
#         The URL that points to the location of the codecs directory.
#         This will be mounted at /usr/lib/codecs.
#         MiniMyth contains a script 'mm_squashfs_codes_make' to help with
#         creating a codecs squashfs image (*.sfs). Telnet into your MiniMyth
#         frontend and run the script by typing 'mm_squashfs_codecs_make'. If
#         their is no codecs directory or the codecs directory is empty, then
#         the script will download the essential codecs tarball from the
#         Internet, create the codecs directory and put the downloaded codecs
#         in the codecs directory. After that, the script will create the codecs
#         squashfs image, put the image in the root directory (/) and tell you
#         the name of the image. You can then download the image from your
#         MiniMyth frontend through the web interface to the MiniMyth file
#         system (<http://<frontend>:8080/>.
#
# A URL must have the the form described in the 'Extras directory ...' section.
#
# Alternatively, you can mount the codecs directory by adding the appropriate
# commands to the 'minimyth.script' script.
################################################################################
#MM_CODECS_URL='conf:codecs.sfs'

################################################################################
# Theme configuration variables.
#
# MythTV themes are large and numerous. Rather than burden the MiniMyth root
# file system image with this extra size, MiniMyth downloads and mounts the
# MythTV theme and the MythTV OSD theme that are to be used by the frontend.
# The MiniMyth distribution contains serveral themes, which can be found in the
# 'themes/' directory. Themes that end in 'osd' are MythTV OSD themes. Themes
# that end in 'wide' are widescreen MythTV themes. The remaining themes are
# standard MythTV themes. In addition, to choosing from the included themes
# you can use your own MythTV theme and MythTV OSD theme.
#
# MythTV scales the MythTV theme graphics to sizes that are appropriate for
# your display resolution. If it present and up-to-date, then this cached theme
# is reused each time mythfrontend is starts. This works well on MythTV
# frontend's that have non-volitile storage (e.g. a hard disk drive). However,
# MiniMyth systems do not have non-volitile storage. As a result, mythfrontend
# regenerates the cached theme each time that MiniMyth is rebooted. In order
# to enable MiniMyth to have all the avantages of a cached theme without
# regenerating the cached theme each time MiniMyth is rebooted, MiniMyth can
# mount the themecache directory at boot time.
#
# The variables are
#     MM_THEME_NAME:
#         The name of the MythTV theme to be used. You must provide a MythTV
#         theme name.
#     MM_THEMEOSD_NAME:
#         The name of the MythTV OSD theme to be used. You must provide a
#         MythTV OSD theme name.
#     MM_THEME_URL:
#         The URL that points to the location of the MythTV theme that will
#         be mounted in the MythTV themes directory ('/usr/share/mythtv/themes')
#         as ${MM_THEME_NAME}. If you do not provide MM_THEME_URL, then MiniMyth
#         will assume that the theme is a squashfs image file located in the
#         distribution's themes directory ('themes') having the name
#         "${MM_THEME_NAME}.sfs'.
#     MM_THEMEOSD_URL:
#         The URL that points to the location of the MythTV OSD theme that will
#         be mounted in the MythTV themes directory ('/usr/share/mythtv/themes')
#         as ${MM_THEMEOSD_NAME}. If you do not provide MM_THEMEOSD_URL,
#         then MiniMyth will assume that the theme is a squashfs image file
#         located in the distribution's themes directory ('themes') having the
#         name "${MM_THEME_NAME}.sfs'.
#     MM_THEMECACHE_URL:
#         The URL that points to the location of the already generated
#         themecache directory.
#         This will be mounted at /root/.mythtv/themecache.
#         MiniMyth contains a script 'mm_squashfs_themecache_make' to help with
#         creating a themecache squashfs image (*.sfs). Telnet into your
#         MiniMyth frontend and run the script by typing
#         'mm_squashfs_themecache_make'. If their is a themecache directory
#         with exactly on cached theme, then the script will create the
#         themecache squashfs image of the themecache directory, put the image
#         in the root directory (/) and tell you the name of the image. You can
#         then download the image from your MiniMyth frontend through the web
#         interface to the MiniMyth file system (<http://<frontend>:8080/>.
#
# A URL must have the the form described in the 'Extras directory ...' section.
#
# Alternatively, you can mount the theme directories by adding the appropriate
# commands to the 'minimyth.script' script.
################################################################################
#MM_THEME_NAME='G.A.N.T.'
#MM_THEMEOSD_NAME='Titivillus-OSD'
#MM_THEME_URL='dist:themes/G.A.N.T.sfs'
#MM_THEMEOSD_URL='dist:themes/Titivillus-OSD.sfs'
#MM_THEMECACHE_URL='conf:themecaches/G.A.N.T..1024.768.sfs'

################################################################################
# Remote media directory configuration variables.
#
# You can mount remote media directories by setting some variables. The
# variables are:
#     MM_MYTHDVD_URL:
#         The URL that points to the location of the directory where MythDVD's
#         temporary DVD ripping directory be created.
#         This will be mounted at /mnt/dvd, and MythDVD's temporary DVD ripping
#         directory will be /mnt/dvd/mythdvd/temp.
#         This directory must be read-write.
#     MM_MYTHGALLERY_URL:
#         The URL that points to the location of the media for MythGallery.
#         This will be mounted at /mnt/gallery.
#     MM_MYTHMUSIC_URL:
#         The URL that points to the location of the media for MythMusic.
#         This will be mounted at /mnt/music.
#         If you plan to rip CDs, then this directory must be read-write,
#         otherwise it can be read-only.
#     MM_MYTHVIDEO_URL:
#         The URL that points to the location of the media for MythVideo.
#         This will be mounted at /mnt/video.
#         If you plan to rip DVDs, then this directory must be read-write,
#         otherwise it can be read-only.
#
# A URL must have the the form described in the 'add extras directory'
# section.
#
# Alternatively, you can mount remote directories by adding the appropriate
# commands to the 'minimyth.script' script. If you do this, there are some
# things that you should know.
#
# First, it is suggested that you create new mount points below '/mnt'.
#
# Second, there is a shell function called 'mount_url' that you might find
# useful. You can access this function by including the file
# '/etc/minimyth.d/minimyth.functions' in 'minimyth.script'. This function takes
# two arguments:
#     URL: required argument:
#         This argument is described above.
#     MOUNT_DIR: required argument:
#         The local directory (e.g. /mnt/music) where the URL will be mounted.
################################################################################
#MM_MYTHDVD_URL='nfs://server.home/home/public/tmp/<hostname>'
#MM_MYTHGALLERY_URL='nfs://server.home/home/public/pictures'
#MM_MYTHMUSIC_URL='nfs://server.home/home/public/music'
#MM_MYTHVIDEO_URL='nfs://server.home/home/public/videos'

################################################################################
# LIRC configuration variables.
#
# You can set up lirc by providing setting some variables. The variables are:
#     MM_LIRC_REMOTE:
#         The remote control that you are using.
#         MM_LIRC_REMOTE is used to pick built-in 'lircd.conf' and 'lircrc'
#         files. While 'lircrc' is depends on the remote, 'lircd.conf' depends
#         on the remote and the driver.
#         Current values are:
#            hauppauge_A415 with drivers: 'irman'
#            hauppauge_R808 with drivers: 'irman' and 'serial'
#            mceusb2        with drivers: 'mceusb2'
#         If you MiniMyth does not have built-in LIRC configuration files or you
#         do not want to use the built-in configuration files, then you can
#         place your your 'lircd.conf' and 'lircrc' files in the MiniMyth conf
#         directory. In the 'lircrc' file, each record's 'prog' attribute must
#         be set to the name of the program being controlled (i.e. 'mythtv',
#         'mplayer' or 'xine') rather than to 'irxevent'.
#         If you do not specify MM_LIRC_REMOTE and you have a USB based remote
#         control receiver, then MiniMyth will attempt to determine the value
#         for MM_LIRC_REMOTE using the USB vendor and product identifiers in
#         conjuction with the /etc/hardware.d/usb2lirc.map file.
#     MM_LIRC_DRIVER:
#         The name of the lircd driver (e.g. irman).
#         MM_LIRC_DRIVER is used to determine what LIRC driver to use and to
#         pick a built-in 'lircd.conf' file.
#         If you do not specify MM_LIRC_DRIVER and you have a USB based remote
#         control receiver, then MiniMyth will attempt to determine the value
#         for MM_LIRC_DRIVER using the USB vendor and product identifiers in
#         conjuction with the /etc/hardware.d/usb2lirc.map file.
#     MM_LIRC_DEVICE:
#         The name of your lirc device (e.g. /dev/ttyS0).
#         If you do not specify a value for MM_LIRC_DEVICE, then MiniMyth
#         will attempt to pick a reasonable default value based on the value
#         of MM_LIRC_DRIVER.
#     MM_LIRC_KERNEL_MODULE:
#         The name of any kernel module that you need to load to support
#         your lirc device (e.g. 8250). If you do not specify a value for
#         MM_LIRC_KERNEL_MODULE, then MiniMyth will attempt to pick a
#         reasonable default value based on the value of MM_LIRC_DRIVER.
#     MM_LIRC_KERNEL_MODULE_OPTIONS:
#         Options for the kernel module specified by MM_LIRC_KERNEL_MODULE.
#         If you do not specify a value for MM_LIRC_KERNEL_MODULE_OPTIONS, then
#         MiniMyth will attempt to pick a reasonable default value based on the
#         value of MM_LIRC_DRIVER.
#         For MM_LIRC_KERNEL_MODULE=lirc_serial, you need to use
#         MM_LIRC_KERNEL_MODULE_OPTIONS to specify the parameters for the serial
#         port that you are using. For example:
#             COM1: MM_LIRC_KERNEL_MODULE_OPTIONS='irq=4 io=0x3f8'
#             COM2: MM_LIRC_KERNEL_MODULE_OPTIONS='irq=3 io=0x2f8'
#         If these do not work or you need values for other COM ports, then you
#         may need to look at your BIOS settings to determine the correct values
#         for irq and io on your system.
#     MM_LIRC_IREXEC_ENABLED:
#         Controls whether or not the irexec daemon runs.
#         Valid values are 'yes' and 'no' with 'no' being the default.
#
# Alternatively, you can configure lirc by adding the appropriate commands to
# 'minimyth.script' script. If you do this, when you run lircd, you need to
# specify the driver using the '--driver' command line option and the device
# using the '--device' command line option. If the lirc init script detects
# that lircd is already running, then it will exit immediately.
################################################################################
#MM_LIRC_REMOTE='hauppauge_R808'
#MM_LIRC_DRIVER='irman'
#MM_LIRC_DEVICE='/dev/ttyS0'
#MM_LIRC_KERNEL_MODULE='8250'
#MM_LIRC_IREXEC_ENABLED='no'

################################################################################
# LCDPROC configuration variables.
#
# You can set up an LCDPROC display by providing setting some variables. The
# variables are:
#     MM_LCDPROC_DEVICE:
#         The name of the LCDd device.
#         MM_LCDPROC_DEVICE is used to pick a device specific built-in LCDd.conf
#         file. If there is no device specific build-in LCDd.conf file, then the
#         generic LCDd.conf file is used.
#         Currently, there are no built-in LCDd.conf files.
#         If you MiniMyth does not have built-in LCDd configuration file or you
#         do not want to use the built-in configuration file, then you can
#         place your your 'LCDd.conf' file in the MiniMyth configuration
#         directory. You can find a example LCDd.conf file in
#         /etc/lcd.d/LCDd.conf on your MiniMyth frontend, which you can download
#         through the web interface to the MiniMyth file system
#         (<http://<frontend>:8080/>. If you do not specify MM_LCDPROC_DRIVER
#         and you have a USB based LCD  display, then MiniMyth will attempt to
#         determine the value for MM_LCDPROC_DRIVER using the USB vendor and
#         product identifiers in conjuction with the
#         /etc/hardware.d/usb2lcdproc.map file.
#
#    Alternatively, you can configure lcdproc by adding the appropiate commands
#    to 'minimyth.script' script. If the lcdproc init script detects that LCDd
#    is already running, then it will exit immediately.
################################################################################
#MM_LIRCPROC_DEVICE=''

################################################################################
# MiniMyth Myth frontend jumppoints configuration variables.
#
# Myth frontend jumppoints are stored in the 'jumppoints' table in the Myth
# master backend database. MiniMyth can modify its jumppoints in the
# 'jumppoints' table.
#
# The variables are set as follows:
#     MM_MYTHDB_JUMPPOINT='<destination>~<keylist>'
################################################################################
#MM_MYTHDB_JUMPPOINT='MythGallery~Alt+G'
#MM_MYTHDB_JUMPPOINT='Play music~Alt+M'
#MM_MYTHDB_JUMPPOINT='MythStream~Alt+S'
#MM_MYTHDB_JUMPPOINT='TV Recording Playback~Alt+T'
#MM_MYTHDB_JUMPPOINT='MythVideo~Alt+V'

################################################################################
# MiniMyth Myth frontend keybindings configuration variables.
#
# Myth frontend keybindings are stored in the 'keybindings' table in the Myth
# master backend database. MiniMyth can modify its keybindings in the
# 'keybindings' table.
#
# The variables are set as follows:
#     MM_MYTHDB_KEYBINDING='<context>~<action>~<keylist>'
################################################################################
#MM_MYTHDB_KEYBINDING='Music~FFWD~)'
#MM_MYTHDB_KEYBINDING='Music~RWND~('
#MM_MYTHDB_KEYBINDING='Stream~FULLSCREEN~W'
#MM_MYTHDB_KEYBINDING='TV Playback~SEEKFFWD~),Right'
#MM_MYTHDB_KEYBINDING='TV Playback~SEEKRWND~(,Left'

################################################################################
# MiniMyth Myth frontend settings configuration variables.
#
# Myth frontend settings are stored in the 'settings' table in the Myth
# master backend database. MiniMyth can modify its settings in the
# 'settings' table.
#
# The variables are set as follows:
#     MM_MYTHDB_SETTING='<value>~<data>'
################################################################################
#MM_MYTHDB_SETTING='GuiOffsetY~0'
#MM_MYTHDB_SETTING='GuiOffsetX~0'
#MM_MYTHDB_SETTING='GuiHeight~768'
#MM_MYTHDB_SETTING='GuiWidth~1366'
