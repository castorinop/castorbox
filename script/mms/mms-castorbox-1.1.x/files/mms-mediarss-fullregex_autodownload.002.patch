=== modified file 'plugins/feature/media-rss/media_rss.cpp'
--- old/plugins/feature/media-rss/media_rss.cpp	2010-02-23 18:47:11 +0000
+++ new/plugins/feature/media-rss/media_rss.cpp	2010-10-06 01:21:52 +0000
@@ -277,7 +286,9 @@
 bool MediaRss::in_autodownload(string category, string name) {
   std::list<MyPair> rules = mr_down->p_rules();
   foreach (MyPair& rule, rules)
-    if ( category == rule.first && regex_tools::regex_str_match(name, "^" + rule.second + "(.+?)")) {
+    if ( regex_tools::regex_str_match(category, rule.first + "(.+?)") /* category regex */ 
+		/* all in this category  or title regex */
+		&& (rule.second == "*" || regex_tools::regex_str_match(name, "^" + rule.second + "(.+?)")) ) {
       return true;
     }
   return false;
@@ -975,13 +979,14 @@
 }
 
 void MediaRss::update_autodownloads() {
-  string name;
+  string name, exp;
   if (opts.autodownload() == dgettext("mms-media-rss","yes") && !busy_audw) {
     busy_audw = true;
     //print_info("MediaRss: finding autodownloads");
     std::list<MyPair> rules = mr_down->p_rules();
     foreach (MyPair& rule, rules) {
-      vector<RssItem> iter = getItemsMatch(rule.first, rule.second);
+      exp = (rule.second == "*" ? "" : rule.second);
+      vector<RssItem> iter = getItemsMatch(rule.first, exp);
       foreach (RssItem& i, iter) {
         if (i.status <= MDB_NONE) {
 	  name = i.title;
