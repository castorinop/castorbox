diff -x '*~' -x '.*' --speed-large-files --minimal -Nru tmp/wget-1.11.4/Makefile.in new-wget-1.11.4/Makefile.in
--- tmp/wget-1.11.4/Makefile.in	2008-05-29 00:29:54.000000000 -0300
+++ new-wget-1.11.4/Makefile.in	2009-07-22 12:26:32.000000000 -0300
@@ -55,10 +55,10 @@
 localedir   = $(prefix)/share/locale
 
 CC = @CC@
-CFLAGS = @CFLAGS@
-CPPFLAGS = @CPPFLAGS@
+CFLAGS = @CFLAGS@ @libproxy_CFLAGS@
+CPPFLAGS = @CPPFLAGS@ @libproxy_CFLAGS@
 DEFS = @DEFS@ -DSYSTEM_WGETRC=\"$(sysconfdir)/wgetrc\" -DLOCALEDIR=\"$(localedir)\"
-LIBS = @LIBS@ @LIBSSL@ @LIBGNUTLS@
+LIBS = @LIBS@ @LIBSSL@ @LIBGNUTLS@ @libproxy_LIBS@
 LDFLAGS = @LDFLAGS@
 
 #
diff -x '*~' -x '.*' --speed-large-files --minimal -Nru tmp/wget-1.11.4/src/config.h.in new-wget-1.11.4/src/config.h.in
--- tmp/wget-1.11.4/src/config.h.in	2008-06-29 22:41:13.000000000 -0300
+++ new-wget-1.11.4/src/config.h.in	2009-07-22 12:24:56.000000000 -0300
@@ -84,6 +87,9 @@
 /* Define to 1 if you have the `nsl' library (-lnsl). */
 #undef HAVE_LIBNSL
 
+/* Define when using libproxy */
+#undef HAVE_LIBPROXY
+
 /* Define to 1 if you have the `rt' library (-lrt). */
 #undef HAVE_LIBRT
 
diff -x '*~' -x '.*' --speed-large-files --minimal -Nru tmp/wget-1.11.4/src/retr.c new-wget-1.11.4/src/retr.c
--- tmp/wget-1.11.4/src/retr.c	2008-04-27 01:48:23.000000000 -0300
+++ new-wget-1.11.4/src/retr.c	2009-07-22 12:04:33.000000000 -0300
@@ -53,6 +53,10 @@
 #include "convert.h"
 #include "ptimer.h"
 
+#ifdef HAVE_LIBPROXY
+#include "proxy.h"
+#endif
+
 /* Total size of downloaded files.  Used to enforce quota.  */
 SUM_SIZE_INT total_downloaded_bytes;
 
@@ -1002,7 +1006,40 @@
       break;
     }
   if (!proxy || !*proxy)
+#ifdef HAVE_LIBPROXY
+  {
+	pxProxyFactory *pf = px_proxy_factory_new();
+        if (!pf)
+        {
+		logprintf (LOG_VERBOSE, _("Allocating memory for libproxy failed"));
+                return NULL;
+        }
+	int i; 
+	char direct[] = "direct://";
+
+	logprintf (LOG_VERBOSE, _("asking libproxy about url '%s'\n"), u->url);
+	char **proxies = px_proxy_factory_get_proxies(pf, u->url);
+	if (proxies[0])
+	{
+          char *check = NULL;
+          asprintf(&check , "%s", proxies[0]);
+	    logprintf (LOG_VERBOSE, _("libproxy suggest to use '%s'\n"), check);
+  	    if(strcmp(check ,direct) != 0)
+	    {
+		asprintf(&proxy , "%s", proxies[0]);
+  	        logprintf (LOG_VERBOSE, _("case 2: libproxy setting to use '%s'\n"), proxy);
+	    } 
+	}
+	for(i=0;proxies[i];i++) free(proxies[i]);
+	free(proxies);
+	free(pf);
+        
+        if (!proxy || !*proxy)
+	    return NULL;
+  }
+#else
     return NULL;
+#endif
 
   /* Handle shorthands.  `rewritten_storage' is a kludge to allow
      getproxy() to return static storage. */
diff -x '*~' -x '.*' --speed-large-files --minimal -Nru tmp/wget-1.11.4/configure.in new-wget-1.11.4/configure.in
--- tmp/wget-1.11.4/configure.in	2008-04-27 01:48:19.000000000 -0300
+++ new-wget-1.11.4/configure.in	2009-07-22 12:24:02.000000000 -0300
@@ -353,6 +353,23 @@
 AC_DEFINE([HAVE_MD5], 1, [Define if we're compiling support for MD5.])
 AC_SUBST(MD5_OBJ)
 
+dnl
+dnl libproxy support
+dnl
+AC_ARG_ENABLE(libproxy,
+  [  --enable-libproxy       libproxy support for system wide proxy configuration])
+if test "${enable_libproxy}" != "no"
+then
+  PKG_CHECK_MODULES([libproxy], [libproxy-1.0], [enable_libproxy=yes], [enable_libproxy=no])
+fi
+if test "${enable_libproxy}" = "yes"
+then
+  AC_SUBST(libproxy_CFLAGS)
+  AC_SUBST(libproxy_LIBS)
+  AC_DEFINE([HAVE_LIBPROXY], 1, [Define when using libproxy])
+fi
+
+
 dnl **********************************************************************
 dnl Checks for IPv6
 dnl **********************************************************************

