--- portmap_4/daemon.c.rpcuser	Wed Feb 28 18:42:17 2001
+++ portmap_4/daemon.c	Wed Feb 28 18:42:17 2001
@@ -35,6 +35,7 @@
 static char sccsid[] = "@(#)daemon.c	5.3 (Berkeley) 12/28/90";
 #endif /* LIBC_SCCS and not lint */
 
+#include <stdlib.h>
 #include <sys/types.h>
 #include <fcntl.h>
 #include <unistd.h>
--- portmap_4/pmap_check.c.rpcuser	Wed Feb 28 18:42:17 2001
+++ portmap_4/pmap_check.c	Wed Feb 28 18:50:28 2001
@@ -40,6 +40,8 @@
 #include <rpc/pmap_prot.h>
 #include <syslog.h>
 #include <netdb.h>
+#include <pwd.h>
+#include <sys/types.h>
 #include <sys/signal.h>
 #ifdef SYSV40
 #include <netinet/in.h>
@@ -149,11 +151,47 @@
     /*
      * Give up root privileges so that we can never allocate a privileged
      * port when forwarding an rpc request.
+     *
+     * Fix 8/3/00 Philipp Knirsch: First lookup our rpc user. If we find it,
+     * switch to that uid, otherwise simply resue the old bin user and print
+     * out a warning in syslog.
      */
-    if (setuid(1) == -1) {
-	syslog(LOG_ERR, "setuid(1) failed: %m");
-	exit(1);
+
+    struct passwd *pwent;
+
+    pwent = getpwnam("rpc");
+    if (pwent == NULL) {
+        syslog(LOG_WARNING, "user rpc not found, reverting to user bin");
+        if (setgid(1) == -1) {
+            syslog(LOG_ERR, "setgid(1) failed: %m");
+            exit(1);
+        }
+        if (setuid(1) == -1) {
+            syslog(LOG_ERR, "setuid(1) failed: %m");
+            exit(1);
+        }
     }
+    else {
+        if (setgroups(0,NULL) == -1) {
+            syslog(LOG_WARNING,"setgroups() to clear group memberships failed: %m");
+        }
+
+        if (setgid(pwent->pw_gid) == -1) {
+            syslog(LOG_WARNING, "setgid() to rpc group failed: %m");
+            if (setgid(1) == -1) {
+                syslog(LOG_ERR, "setgid(1) failed: %m");
+                exit(1);
+            }
+        }
+        if (setuid(pwent->pw_uid) == -1) {
+            syslog(LOG_WARNING, "setuid() to rpc user failed: %m");
+            if (setuid(1) == -1) {
+                syslog(LOG_ERR, "setuid(1) failed: %m");
+                exit(1);
+            }
+        }
+    }
+
     (void) signal(SIGINT, toggle_verboselog);
 }
 
